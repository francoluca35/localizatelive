{"ast":null,"code":"import express from \"express\";\nimport bcrypt from \"bcryptjs\";\nimport jwt from \"jsonwebtoken\";\nimport User from \"../models/User.js\";\nconst router = express.Router();\n\n// Registro\nrouter.post(\"/register\", async (req, res) => {\n  const {\n    username,\n    password\n  } = req.body;\n  try {\n    const hashed = await bcrypt.hash(password, 10);\n    const user = await User.create({\n      username,\n      password: hashed,\n      role: \"admin\"\n    });\n    res.status(201).json({\n      message: \"Usuario registrado\",\n      user: {\n        username: user.username,\n        role: user.role\n      }\n    });\n  } catch (err) {\n    res.status(400).json({\n      error: \"Usuario ya existe o error de datos\"\n    });\n  }\n});\n\n// Login\nrouter.post(\"/login\", async (req, res) => {\n  const {\n    username,\n    password\n  } = req.body;\n  try {\n    const user = await User.findOne({\n      username\n    });\n    if (!user) return res.status(404).json({\n      error: \"Usuario no encontrado\"\n    });\n    const isMatch = await bcrypt.compare(password, user.password);\n    if (!isMatch) return res.status(401).json({\n      error: \"Contrase침a incorrecta\"\n    });\n    const token = jwt.sign({\n      id: user._id,\n      role: user.role\n    }, process.env.JWT_SECRET_KEY, {\n      expiresIn: \"2h\"\n    });\n    res.json({\n      token,\n      user: {\n        _id: user._id,\n        username: user.username,\n        role: user.role\n      }\n    });\n  } catch (err) {\n    res.status(500).json({\n      error: \"Error al iniciar sesi칩n\"\n    });\n  }\n});\nexport default router;","map":{"version":3,"names":["express","bcrypt","jwt","User","router","Router","post","req","res","username","password","body","hashed","hash","user","create","role","status","json","message","err","error","findOne","isMatch","compare","token","sign","id","_id","process","env","JWT_SECRET_KEY","expiresIn"],"sources":["C:/Users/Franco Luca Parera/localizatelive/src/components/PrivateRoute.jsx"],"sourcesContent":["import express from \"express\";\r\nimport bcrypt from \"bcryptjs\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport User from \"../models/User.js\";\r\n\r\nconst router = express.Router();\r\n\r\n// Registro\r\nrouter.post(\"/register\", async (req, res) => {\r\n  const { username, password } = req.body;\r\n  try {\r\n    const hashed = await bcrypt.hash(password, 10);\r\n    const user = await User.create({\r\n      username,\r\n      password: hashed,\r\n      role: \"admin\",\r\n    });\r\n    res.status(201).json({\r\n      message: \"Usuario registrado\",\r\n      user: { username: user.username, role: user.role },\r\n    });\r\n  } catch (err) {\r\n    res.status(400).json({ error: \"Usuario ya existe o error de datos\" });\r\n  }\r\n});\r\n\r\n// Login\r\nrouter.post(\"/login\", async (req, res) => {\r\n  const { username, password } = req.body;\r\n  try {\r\n    const user = await User.findOne({ username });\r\n    if (!user) return res.status(404).json({ error: \"Usuario no encontrado\" });\r\n\r\n    const isMatch = await bcrypt.compare(password, user.password);\r\n    if (!isMatch)\r\n      return res.status(401).json({ error: \"Contrase침a incorrecta\" });\r\n\r\n    const token = jwt.sign(\r\n      { id: user._id, role: user.role },\r\n      process.env.JWT_SECRET_KEY,\r\n      { expiresIn: \"2h\" }\r\n    );\r\n\r\n    res.json({\r\n      token,\r\n      user: {\r\n        _id: user._id,\r\n        username: user.username,\r\n        role: user.role,\r\n      },\r\n    });\r\n  } catch (err) {\r\n    res.status(500).json({ error: \"Error al iniciar sesi칩n\" });\r\n  }\r\n});\r\n\r\nexport default router;\r\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,SAAS;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,GAAG,MAAM,cAAc;AAC9B,OAAOC,IAAI,MAAM,mBAAmB;AAEpC,MAAMC,MAAM,GAAGJ,OAAO,CAACK,MAAM,CAAC,CAAC;;AAE/B;AACAD,MAAM,CAACE,IAAI,CAAC,WAAW,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EAC3C,MAAM;IAAEC,QAAQ;IAAEC;EAAS,CAAC,GAAGH,GAAG,CAACI,IAAI;EACvC,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMX,MAAM,CAACY,IAAI,CAACH,QAAQ,EAAE,EAAE,CAAC;IAC9C,MAAMI,IAAI,GAAG,MAAMX,IAAI,CAACY,MAAM,CAAC;MAC7BN,QAAQ;MACRC,QAAQ,EAAEE,MAAM;MAChBI,IAAI,EAAE;IACR,CAAC,CAAC;IACFR,GAAG,CAACS,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACnBC,OAAO,EAAE,oBAAoB;MAC7BL,IAAI,EAAE;QAAEL,QAAQ,EAAEK,IAAI,CAACL,QAAQ;QAAEO,IAAI,EAAEF,IAAI,CAACE;MAAK;IACnD,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOI,GAAG,EAAE;IACZZ,GAAG,CAACS,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEG,KAAK,EAAE;IAAqC,CAAC,CAAC;EACvE;AACF,CAAC,CAAC;;AAEF;AACAjB,MAAM,CAACE,IAAI,CAAC,QAAQ,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EACxC,MAAM;IAAEC,QAAQ;IAAEC;EAAS,CAAC,GAAGH,GAAG,CAACI,IAAI;EACvC,IAAI;IACF,MAAMG,IAAI,GAAG,MAAMX,IAAI,CAACmB,OAAO,CAAC;MAAEb;IAAS,CAAC,CAAC;IAC7C,IAAI,CAACK,IAAI,EAAE,OAAON,GAAG,CAACS,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEG,KAAK,EAAE;IAAwB,CAAC,CAAC;IAE1E,MAAME,OAAO,GAAG,MAAMtB,MAAM,CAACuB,OAAO,CAACd,QAAQ,EAAEI,IAAI,CAACJ,QAAQ,CAAC;IAC7D,IAAI,CAACa,OAAO,EACV,OAAOf,GAAG,CAACS,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEG,KAAK,EAAE;IAAwB,CAAC,CAAC;IAEjE,MAAMI,KAAK,GAAGvB,GAAG,CAACwB,IAAI,CACpB;MAAEC,EAAE,EAAEb,IAAI,CAACc,GAAG;MAAEZ,IAAI,EAAEF,IAAI,CAACE;IAAK,CAAC,EACjCa,OAAO,CAACC,GAAG,CAACC,cAAc,EAC1B;MAAEC,SAAS,EAAE;IAAK,CACpB,CAAC;IAEDxB,GAAG,CAACU,IAAI,CAAC;MACPO,KAAK;MACLX,IAAI,EAAE;QACJc,GAAG,EAAEd,IAAI,CAACc,GAAG;QACbnB,QAAQ,EAAEK,IAAI,CAACL,QAAQ;QACvBO,IAAI,EAAEF,IAAI,CAACE;MACb;IACF,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOI,GAAG,EAAE;IACZZ,GAAG,CAACS,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEG,KAAK,EAAE;IAA0B,CAAC,CAAC;EAC5D;AACF,CAAC,CAAC;AAEF,eAAejB,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}