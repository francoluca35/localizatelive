{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useAuth } from \"../context/AuthContext\";\nconst API_URL = \"http://localhost:4000/api\";\nexport const useAuthApi = () => {\n  _s();\n  const {\n    login: setAuthContext\n  } = useAuth();\n  const register = async (username, password) => {\n    const res = await fetch(`${API_URL}/register`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    const data = await res.json();\n    if (!res.ok) throw new Error(data.error || \"Error al registrarse\");\n    return data;\n  };\n  const login = async (username, password) => {\n    const res = await fetch(`${API_URL}/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    const data = await res.json();\n    if (!res.ok) throw new Error(data.error || \"Credenciales inválidas\");\n    setAuthContext(data.user); // lo guarda en contexto\n    return data.user;\n  };\n  return {\n    register,\n    login\n  };\n};\n_s(useAuthApi, \"7LZGUq8kdkZVHXL95ttAyVV7F10=\", false, function () {\n  return [useAuth];\n});","map":{"version":3,"names":["useAuth","API_URL","useAuthApi","_s","login","setAuthContext","register","username","password","res","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","error","user"],"sources":["C:/Users/Franco Luca Parera/localizatelive/src/hooks/useAuthApi.js"],"sourcesContent":["import { useAuth } from \"../context/AuthContext\";\r\n\r\nconst API_URL = \"http://localhost:4000/api\";\r\n\r\nexport const useAuthApi = () => {\r\n  const { login: setAuthContext } = useAuth();\r\n\r\n  const register = async (username, password) => {\r\n    const res = await fetch(`${API_URL}/register`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ username, password }),\r\n    });\r\n\r\n    const data = await res.json();\r\n    if (!res.ok) throw new Error(data.error || \"Error al registrarse\");\r\n    return data;\r\n  };\r\n\r\n  const login = async (username, password) => {\r\n    const res = await fetch(`${API_URL}/login`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ username, password }),\r\n    });\r\n\r\n    const data = await res.json();\r\n    if (!res.ok) throw new Error(data.error || \"Credenciales inválidas\");\r\n\r\n    setAuthContext(data.user); // lo guarda en contexto\r\n    return data.user;\r\n  };\r\n\r\n  return { register, login };\r\n};\r\n"],"mappings":";AAAA,SAASA,OAAO,QAAQ,wBAAwB;AAEhD,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM;IAAEC,KAAK,EAAEC;EAAe,CAAC,GAAGL,OAAO,CAAC,CAAC;EAE3C,MAAMM,QAAQ,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IAC7C,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGT,OAAO,WAAW,EAAE;MAC7CU,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,QAAQ;QAAEC;MAAS,CAAC;IAC7C,CAAC,CAAC;IAEF,MAAMQ,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;IAC7B,IAAI,CAACR,GAAG,CAACS,EAAE,EAAE,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,KAAK,IAAI,sBAAsB,CAAC;IAClE,OAAOJ,IAAI;EACb,CAAC;EAED,MAAMZ,KAAK,GAAG,MAAAA,CAAOG,QAAQ,EAAEC,QAAQ,KAAK;IAC1C,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGT,OAAO,QAAQ,EAAE;MAC1CU,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,QAAQ;QAAEC;MAAS,CAAC;IAC7C,CAAC,CAAC;IAEF,MAAMQ,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;IAC7B,IAAI,CAACR,GAAG,CAACS,EAAE,EAAE,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,KAAK,IAAI,wBAAwB,CAAC;IAEpEf,cAAc,CAACW,IAAI,CAACK,IAAI,CAAC,CAAC,CAAC;IAC3B,OAAOL,IAAI,CAACK,IAAI;EAClB,CAAC;EAED,OAAO;IAAEf,QAAQ;IAAEF;EAAM,CAAC;AAC5B,CAAC;AAACD,EAAA,CA9BWD,UAAU;EAAA,QACaF,OAAO;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}